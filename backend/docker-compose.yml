version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - kafka-network

  kafka-cli:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka-cli
    depends_on:
      - kafka
    entrypoint: /bin/sh
    tty: true
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - kafka-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - minio-network

  producer:
    build:
      context: ./
      dockerfile: Dockerfile.producer
      args:
        - TARGET=producer
    container_name: image-converter-producer
    command: ["/app/image-converter-producer"]
    environment:
      - PORT=8080
      - ENV=local
      - ROLE=producer
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - minio
    networks:
      - minio-network
      - kafka-network

  consumer:
    build:
      context: ./
      dockerfile: Dockerfile.consumer
      args:
        - TARGET=consumer
    container_name: image-converter-consumer
    command: ["/app/image-converter-consumer"]
    environment:
      - PORT=8081
      - ENV=local
      - ROLE=consumer
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - minio
    networks:
      - minio-network
      - kafka-network

  downloader:
    build:
      context: ./
      dockerfile: Dockerfile.downloader
      args:
        - TARGET=downloader
    container_name: image-converter-downloader
    command: ["/app/image-converter-downloader"]
    environment:
      - PORT=8082
      - ENV=local
      - ROLE=downloader
    ports:
      - "8082:8082"
    depends_on:
      - minio
    networks:
      - minio-network

volumes:
  minio-data:

networks:
  kafka-network:
    driver: bridge
  minio-network:
    driver: bridge
